##redis地址
#spring.redis.host=127.0.0.1
##redis客户端lettuce配置
##最大连接数，负数表示无限制
#spring.redis.lettuce.pool.max-active=8
##最大等待，负数表示无限制
#spring.redis.lettuce.pool.max-wait=-1
##shutdown超时
#spring.redis.lettuce.shutdown-timeout=100
##最大空闲连接数，负数表示无限制
#spring.redis.lettuce.pool.max-idle=8
##最小空闲连接数
#spring.redis.lettuce.pool.min-idle=0


spring:
  datasource:
    username: root
    password: mpy520an
    url: jdbc:mysql://localhost:3306/test?characterEncoding=utf-8&allowMultiQueries=true&useSSL=true&serverTimezone=GMT%2b8:00
    driver-class-name:  com.mysql.cj.jdbc.Driver

  activemq:
    broker-url: tcp://127.0.0.1:61616
    user: admin
    password: admin
    #在考虑结束之前等待的时间
    close-timeout: 15s
    #默认代理URL是否应该在内存中。如果指定了显示代理，则忽略此值
    in-memory: true
    #是否在回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留。
    non-blocking-redelivery: false
    #等待消息发送响应的时间。设置为0等待永远
    send-timeout: 0
    queue-name: active.queue
    topic-name: active.topic.name.model

    pool:
      enabled: true
      max-connections: 1
      idle-timeout: 30

  security:
    user:
      name: user
      password: 123456

  servlet:
    multipart:
      max-file-size: 1MB
      max-request-size: 10MB

#  mvc:
#    static-path-pattern: /static/**


mybatis:
  configuration:
    map-underscore-to-camel-case: true
    call-setters-on-nulls: true
  mapper-locations: classpath:mapping/*Mapper.xml

logging:
  level:
    com.example.service: debug
    com.example.mapper: debug
server:
  servlet:
    context-path: /


